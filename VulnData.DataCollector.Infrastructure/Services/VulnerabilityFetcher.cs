using Microsoft.Extensions.Options;
using VulnData.DataCollector.Application.Dtos.Nvd;
using VulnData.DataCollector.Application.Interfaces.Domain;
using VulnData.DataCollector.Domain.Options;

namespace VulnData.DataCollector.Domain.Services;

public class VulnerabilityFetcher : IVulnerabilityFetcher
{
    private readonly IHttpClientFactory _httpClientFactory;
    private readonly NvdOptions _nvdOptions;
    
    public VulnerabilityFetcher(IOptions<NvdOptions> options, IHttpClientFactory httpClientFactory)
    {
        _httpClientFactory = httpClientFactory;
        _nvdOptions = options.Value;
    }
    
    public async Task<List<Vulnerability>> GetDataAsync(int startIndex, int maxResults)
    {
        var apiUrl = $"https://services.nvd.nist.gov/rest/json/cves/2.0/?resultsPerPage={maxResults}&startIndex={startIndex}";
        
        var client = _httpClientFactory.CreateClient();
        
        if (_nvdOptions != null && !string.IsNullOrEmpty(_nvdOptions.ApiKey))
            client.DefaultRequestHeaders.Add("apikey", _nvdOptions.ApiKey);
        
        var response = await client.GetAsync(apiUrl);
        response.EnsureSuccessStatusCode();
        
        NvdData nvdData = await response.Content.ReadFromJsonAsync<NvdData>();
        
        return nvdData.Vulnerabilities;
    }

    public async Task<int> GetVulnCountAsync()
    {
        const int startIndex = 0;
        const int maxResults = 100;
        
        var apiUrl = $"https://services.nvd.nist.gov/rest/json/cves/2.0/?resultsPerPage={maxResults}&startIndex={startIndex}";
        
        var client = _httpClientFactory.CreateClient();
        
        if (_nvdOptions != null && !string.IsNullOrEmpty(_nvdOptions.ApiKey))
            client.DefaultRequestHeaders.Add("apikey", _nvdOptions.ApiKey);
        
        var response = await client.GetAsync(apiUrl);
        response.EnsureSuccessStatusCode();
        
        NvdData nvdData = await response.Content.ReadFromJsonAsync<NvdData>();
        
        return nvdData.TotalResults;
    }
}